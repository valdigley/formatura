server {
    listen 80;
    server_name formatura.fotografo.site;
    root /opt/foto-formatura/dist;
    index index.html;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # Handle client-side routing (React Router)
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Cache static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/xml
        image/svg+xml;

    # Security - hide sensitive files
    location ~ /\.(env|git) {
        deny all;
        return 404;
    }

    # API proxy for Supabase functions (if needed)
    location /api/ {
        proxy_pass https://iisejjtimakkwjrbmzvj.supabase.co/functions/v1/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# HTTPS configuration (will be added by Certbot)
# server {
#     listen 443 ssl http2;
#     server_name formatura.fotografo.site;
#     root /opt/foto-formatura/dist;
#     index index.html;
#
#     # SSL certificates (managed by Certbot)
#     ssl_certificate /etc/letsencrypt/live/formatura.fotografo.site/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/formatura.fotografo.site/privkey.pem;
#     include /etc/letsencrypt/options-ssl-nginx.conf;
#     ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
#
#     # Same configuration as HTTP version
#     location / {
#         try_files $uri $uri/ /index.html;
#     }
#
#     location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
#         expires 1y;
#         add_header Cache-Control "public, immutable";
#         access_log off;
#     }
#
#     gzip on;
#     gzip_vary on;
#     gzip_min_length 1024;
#     gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json application/xml image/svg+xml;
#
#     location ~ /\.(env|git) {
#         deny all;
#         return 404;
#     }
# }